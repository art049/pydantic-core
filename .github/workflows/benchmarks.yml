name: benchmarks

on:
  push:
    # paths:
    #   - 'src/**.rs'
    #   - 'tests/benchmarks/**'
    #   - 'Cargo.toml'
    #   - '.github/workflows/benchmarks.yml'
    branches:
      - main

permissions:
  deployments: write
  contents: write

jobs:
  benchmarks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - uses: actions/cache@v2
        id: cache-py
        name: cache python
        with:
          path: ${{ env.pythonLocation }}
          key: >
            py
            ${{ env.pythonLocation }}
            ${{ hashFiles('tests/requirements.txt') }}
            ${{ hashFiles('pyproject.toml') }}

      - run: pip install -r tests/requirements.txt
        if: steps.cache-py.outputs.cache-hit != 'true'

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - name: cache rust
        uses: Swatinem/rust-cache@v1

      - run: pip install . -v

      # this is required so that pytest uses the installed package
      - run: rm tests/__init__.py
      - run: sudo apt-get install -y valgrind
      - run: pip install git+https://github.com/jcrist/pycallgrind.git
      - run: |
          mkdir -p .benchmarks
          export PYTHONMALLOC=malloc
          export PYTHONHASHSEED=0
          setarch $(uname -m) -R \
            valgrind -q --tool=callgrind \
            --I1=32768,8,64 --D1=32768,8,64 --LL=8388608,16,64 \
            --instr-atstart=no --compress-strings=no --combine-dumps=yes \
            --callgrind-out-file=.benchmarks/pytest-callgrind.out \
            pytest tests/benchmarks/

      - name: Archive profile data
        uses: actions/upload-artifact@v3
        with:
          name: pytest-callgrind.out
          path: .benchmarks/pytest-callgrind.out

      - name: Upload benchmark data to codspeed
        run: |
          METADATA=$(jq -c -n 'env | {ref:.GITHUB_REF,repository:.GITHUB_REPOSITORY,commitHash:.GITHUB_SHA}')
          echo $METADATA
          curl -X POST \
               -H "Authorization: ${{ secrets.AVALANCHE_KEY }}"\
               -H "Profile-Metadata: $METADATA" \
               -F 'profile=@./.benchmarks/pytest-callgrind.out' \
               https://avalanche-api.vercel.app/api/upload

